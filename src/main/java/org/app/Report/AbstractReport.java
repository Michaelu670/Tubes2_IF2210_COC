package org.app.Report;

import com.itextpdf.text.*;

import com.itextpdf.text.pdf.PdfWriter;
import lombok.Setter;
import lombok.experimental.Accessors;

import org.app.Inventory.Holder.FixedBill;
import org.app.Inventory.Item.BillItem;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Date;
import java.util.List;

public abstract class AbstractReport implements ReportWriter {
    protected static final String DIR = "./report/";
    protected static final Font titleFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
    protected static final Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD);
    protected static final Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 8, Font.BOLD);
    protected static final Font normalFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL);
    protected static final Font bigFont = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.NORMAL);
    protected static final Font normalBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
    protected static final Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);

    @Setter @Accessors(fluent = true)
    static List<FixedBill> listOfReport;
    protected static List<BillItem> getBillItem(int idx){
        return listOfReport.get(idx).itemList();
    }
    protected static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }
    protected static void createDirectory()
            throws IOException {
        Path path = Paths.get(AbstractReport.DIR);
        Files.createDirectories(path);
    }

    protected static void addBill(Document document, int idx) throws DocumentException {
        String customerNumber = "Bill Customer " + String.valueOf(idx + 1);
        Anchor anchor = new Anchor(customerNumber, titleFont);
        anchor.setName(customerNumber);

        Paragraph paragraph = new Paragraph();
        addEmptyLine(paragraph, 1);

        Chapter currentChapter = new Chapter(new Paragraph(anchor), idx + 1);

        currentChapter.add(paragraph);
        for(int j = 0 ; j < getBillItem(idx).size(); j++){
            Paragraph subPara = new Paragraph("Item " + (j+1), subFont);
            Section subCatPart = currentChapter.addSection(subPara);
            createList(subCatPart ,idx, j);
            currentChapter.add(paragraph);
        }
        Paragraph endParagraph = new Paragraph();
        addEmptyLine(endParagraph, 1);

        endParagraph.add(new Paragraph(
                "Total Price : " + listOfReport.get(idx).totalPrice(),
                normalBold));
        currentChapter.add(endParagraph);

        document.add(currentChapter);
    }
    protected static void createList(Section section, int idx, int j) {
        com.itextpdf.text.List list = new com.itextpdf.text.List(true, false, 10);
        list.add(new ListItem("Item Name : " + getBillItem(idx).get(j).itemName()));
        list.add(new ListItem("Quantity : " + getBillItem(idx).get(j).quantity()));
        list.add(new ListItem("Order types : " + getBillItem(idx).get(j).orderType()));
        list.add(new ListItem("Notes : " + getBillItem(idx).get(j).notes()));
        section.add(list);
    }

    protected static void addMetaData(Document document, String title) {
        document.addTitle("BMNO Report");
        document.addSubject(title);
        document.addKeywords("Java, PDF, iText, Tubes");
        document.addAuthor("COC");
        document.addCreator("COC");
    }

    protected static void initTitle(Document document, String title)
            throws DocumentException {
        Paragraph preface = new Paragraph();
        preface.add(new Paragraph(title, titleFont));
        addEmptyLine(preface, 1);
        preface.add(new Paragraph(
                "Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
                normalBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph(
                "This document describes " + title + " from BNMO application",
                bigFont));
        document.add(preface);
        document.newPage();
    }

    protected static Document initFile(String filename) throws IOException, DocumentException {
        Document salesReport = new Document();
        createDirectory();
        String FILE = DIR + filename;
        Path pathFile = Paths.get(FILE);
        PdfWriter.getInstance(salesReport, Files.newOutputStream(pathFile));
        return salesReport;
    }
}
